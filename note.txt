prepare data

100 for  each category

60 train 20 val 20 test
# -->41 ...
image resize to 128*128 
image resides in ./image/character_name/resize/test,val,train
convert binary data resides in ./data/X_test.hkl,X_val.hkl,X_train.hkl y_train (labels)....

data validity check by human

yome --> label 0
reina --> label 1
other --> label 2



image to hdf5 or pickle ?
--> using hickle ... but not support 3.6
--> using pickle


define model
save modle
display data
train

#use ipython notenook can save lots of time because
#it only require load keras once!!

#how to visualize activation?
# mean ,std?
# max min for gray scale??

#loss stuck after 2 epoch ...
#learning rate too large .. relu dead?

# make a test
# training ... then draw activations .. (memory too large cannot afford .... fxxx) 
# load final model
# get all layers output
# display by matplot
# display by other tools like tensorboard


#predict
#preict and show result summary
  - show total accuracy
  - show every class accuracy
#predict and show result detail ...every image in test set to a somewhat file

